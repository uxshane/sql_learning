------------ like(유사검색) ------------
like연산자 :
	지정한 문자형태와 일치하는, 또는 포함하고 있는 자원을 검색

1) % : 모든 값
2) _ : 하나의 값

--예) 'm%' : m으로 시작하는 모든 값(memo, michael)
--예) '%a' : a으로 끝나는 모든 값(alpha, banana)
--예) '%a%: a가 한개라도 있는 모든 값(banana, starbucks)
--예) 'a___' : a로 시작하는 값들 중 전체길이가 5글자인 값(apple)

--사원테이블에서 이름이 D로 시작하는 사원들의 사번, 이름을 출력
select employee_id, first_name
from employees
where first_name like 'D%';

--문) 이름의 세번째 글자가 a인 사원의 이름, 급여를 출력
select first_name, salary
from employees
where first_name like '__a%';

--문) 2005년도에 입사한 사원들의 사번, 이름, 입사일 출력
select employee_id, first_name, hire_date
from employees
where hire_date like '%2005';

--문) 이름이 H로 시작하면서 6글자 이상인 사원들의 이름, 급여를 출력하시오
select first_name, salary
from employees
where first_name like 'H_____%';

--문) 이름에 o가 들어가면서 a로 끝나는 사원들의 사번, 이름, 입사일 출력
select employee_id, first_name, hire_date
from employees
where first_name like '%o%a';

--not연산 : 해당 조건을 제외한 자료를 조회
--사원테이블에서 직종이 SA_MAN, IT_PROG가 아닌 모든 사원들의 정보를 조회
select *
from employees
where job_id not in ('SA_MAN', 'IT_PROG');

--문) 전화번호에 44를 포함하고 있지 않은 사원들의 이름, 전화번호를 출력
select first_name, phone_number
from employees
where phone_number not like '%44%';

--문) 전화번호에 44가 중간에만 포함되어 있는 사원들의 이름, 전화번호를 출력
select first_name, phone_number
from employees
where phone_number like '%44%' 
and phone_number not like '%44' 
and phone_number not like '44%';

------------ ORDER BY(정렬) ------------
order by:  질의결과에 반환되는 행들을 정렬하고자 할 때 사용
	order by절은 가장 마지막에 기술.

1) asc : 오름차순 정렬
2) desc : 내림차순 정렬

--사원테이블에서 급여가 높은순으로 사번, 이름, 급여순으로 정렬
  단, 급여가 같을 경우 입사일이 빠른사원부터 정렬
select employee_id, first_name, salary
from employees
order by salary desc, hire_date asc;

--문) 급여가 15000이상인 사원들의 이름, 급여, 입사일을 조회하되
       입사일이 빠른순으로 정렬

--문) 입사일이 빠른 순으로 사번, 이름, 입사일을 출력하되,
        입사일이 같다면 이름 내림차순으로 검색하시오
select employee_id, first_name, hire_date
from employees
order by hire_date, first_name desc;

--문) 부서번호가 작은순으로 정렬, 부서번호가 같을 경우
       급여 내림차순으로 이름, 부서번호, 급여순으로 출력
select first_name, department_id, salary
from employees
order by department_id, salary desc;

--문) 사원테이블에서 부서번호가 80이 아닌 모든 사원들의 정보를
        사번, 이름, 부서번호 순으로 출력하되 사번이 낮은 순으로 출력
select employee_id, first_name, department_id
from employees
where department_id != 80
(where not department_id = 80)
(where department_id not in 80)
order by employee_id;

--문) 직종이 ST_CLERK이 아닌 사원들에 대해
        사번, 이름, 직종 순으로 출력하되
        직종명이 알파벳순으로 뒤에 있는 것부터 조회
select employee_id, first_name, job_id
from employees
where not job_id in ('ST_CLERK', 'ST_MAN')
order by job_id desc;


--문) 사원테이블에서 이름에 s자를 가지고 있지 않은 사원의 정보를 사번
        오름차순으로 사번, 이름의 결과를 조회
select employee_id, first_name
from employees
where not first_name like '%s%'
order by employee_id;

--distinct : 중복을 제거하는 명령어
select distinct salary, department_id
from employees
where department_id != 100
order by salary;

--문) 중복을 제외한 형태로
        부서번호가 90이거나, 80인 사람들의 부서번호, 급여를 출력하되
        부서번호 오름차순, 급여 오름차순으로 정렬
select distinct department_id, salary
from employees
where department_id in (90, 80)
order by department_id, salary;

-------------- 그룹함수 --------------
그룹함수 : 여러 행 또는 테이블 전체에 대하여 하나의 결과를 가져오는 함수
1) avg() : 평균값을 구하는 함수
2) count() : 행의 갯수를 구하는 함수
3) max() : 최대값을 구하는 함수
4) min() : 최솟값을 구하는 함수
5) sum() : 총 합을 구하는 함수
참고) select avg(), first_name....
 - 위와 값이 그룹함수는 일반컬럼과 함께 사용할 수 없다
 - '그룹화'가 처리되면 혼용해서 사용하는 것이 가능

--사원테이블의 전체 행 수(사원수)
select count(*)
from employees

--급여를 받는 사원들의 수
select count(salary)
from employees;

--부서에 속해있는 사원들의 수(null값은 제외)
select count(department_id)
from employees

--문) 사원테이블에서 보너스를 받는 사원들의 정보를 출력
select count(commission_pct)
from employees;

--문) 상사를 가지고 있는 사원 수
select count(manager_id)
from employees;

-- 상사의 직함을 가진 사원 수
select count(distinct manager_id)
from employees;

--문) 직종이 SA_REP인 사원들의 급여의 평균, 최고급여, 최저급여, 
select avg(salary), max(salary), min(salary)
from employees
where job_id = 'SA_REP';

--문) 이 회사의 총직원수, 보너스를 받는 사원수, 급여의 평균, 부서의 수 출력
select count(*), count(commission_pct), avg(salary), count(distinct department_id)
from employees

--숫자함수
1) round() : 반올림 함수
2) trunc() : 버리는 함수
3) power() : 제곱을 구하는 함수
4) mod() : 나머지 값을 구하는 함수

select round(0.12345, 2), round(3.1567, 2)
from dual 

select trunc(0.12345,2)
from dual

select power(4,2) from dual

--문) 사원테이블에서 부서번호가 80번인 사원들의 급여의 평균값을
       소수점 2자리에서 반올림하시오
select round(avg(salary), 2)
from employees
where department_id = 80;

--문) 짝수사번을 가진 사원들의 사번, 이름을 출력
select employee_id, first_name
from employees
where mod(employee_id, 2) = 0;

--문자함수
1) initcap() : 첫 문자를 대문자로 변경하는 함수
 - 공백이나 /를 구분자로 인식함
select initcap('goodmorning') from dual;
select initcap('good morning') from dual;
select initcap('good/morning') from dual;

select first_name
from employees
where first_name = initcap('michael');

2) lower() : 대문자를 소문자로 변경하는 함수
3) upper() : 소문자를 대문자로 변경하는 함수
select lower('Good MOrning') from dual;

select first_name, hire_date
from employees
where upper(first_name) = upper('michael');

3) substr() : 특정 문장을 잘라내는 함수
select substr('good morning john', 8, 4) from dual;
select substr('good morning john', 6) from dual;
select substr('good morning john', -4) from dual;

--문) 사원테이블의 모든 사원의 사번, 이름, 입사일을 출력하되,
       입사일은 년도만 출력
select employee_id, first_name, substr(hire_date, -4)
from employees;

4) replace() : 필요한 문자를 교체하는 함수
select replace('good morning', 'morning', 'night') from dual;

5) length() : 문자열의 길이를 가져오는 함수
select length('apple') from dual;

6) ascii() : 단일 문자를 아스키코드 값으로 변환해주는 함수
select ascii('A') from dual;

7) instr() : 특정 문자나 문자열의 위치를 찾아 변환하는 함수
select instr('good morning', 'o') from dual;

--제일 앞에서부터 3번째 위치의 문자 o의 위치
select instr('good morning', 'o', 1, 3) from dual;

--문) 이름에 ra가 포함되어 있는 사원들의 사번, 이름을 조회
select employee_id, first_name
from employees
where instr(first_name, 'ra') != 0;

--문) 이름과 이름의 마지막 글자를 '**'로 대체한 결과를 출력











