----- subquery -----
*서브쿼리는 특정 SQL문장 안에 또 다른 SQL문장이 포함되어 있는 것
*서브쿼리를 통해 여러번 DB에 접속해야 하는 상황을 한번으로 줄일 수 있다.

-- 사원이름이 Michael이고, 직종이 MK_MAN인 사원의  급여보다
더 많이 받는 사원들이 정보를 사번, 이름, 직종, 급여 순으로 출력

1)이름이 Michael이고, 직종이 MK_MAN인 사원의  급여
select salary
from employees
where first_name = 'Michael' and job_id = 'MK_MAN';

2) 1의 결과보다 많이 받는 사원들의 정보
select employee_id, first_name, job_id, salary
from employees
where salary > 13000;

==>
select employee_id, first_name, job_id, salary
from employees
where salary > (select salary
	        from employees
	        where first_name = 'Michael' and job_id = 'MK_MAN');

--문)
사번이 111번인 사원과 직종이 같고, 159번인 사원보다 급여를 많이 받는
사원들의 정보를 사번, 이름, 직종, 급여 순으로 출력
select employee_id, first_name, job_id, salary
from employees
where job_id = (select job_id from employees where employee_id = 111)
 and salary > (select salary from employees where employee_id = 159);

--문)
사번이 150번인 사원과 급여가 같은 사원들의 정보를 사번, 이름, 급여순으로 출력
select employee_id, first_name, salary
from employees
where salary = (select salary from employees where employee_id = 150);

--문)
평균급여 이상인 사람들의 이름, 급여를 출력
select first_name, salary
from employees
where salary >= (select avg(salary) from employees);

--문)
Bruce와 같은 부서에서 근무하고 있는 사원들의 부서번호, 이름을 출력

--문)
직종이 SA_REP인 사원의 최소급여보다 적으면서
직종이 SH_CLERK은 아닌 사원들의 이름, 직종, 급여를 출력
select first_name, job_id, salary
from employees
where job_id != 'SH_CLERK' and salary < (select min(salary) from employees where job_id = 'SA_REP' );

--문)
100번 부서의 최소 급여보다 많이받는 다른 모든 부서의
부서번호와 최소급여를 출력
select department_id, min(salary)
from employees
where department_id is not null
having min(salary) > (select min(salary) from employees where department_id = 100)
group by department_id;

--문)
성에 Bat가 포함되어 있는 사원과 같은 부서에서 근무하는
사원들을 사번, 이름, 부서번호 순으로 출력
select employee_id, first_name, last_name, department_id
from employees
where department_id = (select department_id from employees where last_name like '%Bat%');

--문)
직종이 AD_PRES인 사원의 부하직원들을 검색하여
이름, 직종, 매니저번호를 출력
1번째 방법:
select first_name, job_id, manager_id
from employees
where manager_id = (select employee_id from employees where job_id = 'AD_PRES');

2번째 방법:
select e1.first_name, e1.job_id, e1.manager_id
from employees e1
join employees e2 on e1.manager_id = e2.employee_id
where e2.job_id = 'AD_PRES';

--문)
직종이 ST_CLERK인 Julia와 같은 부서에서 근무하는 사원중에서
Matthew를 상사로 두고있는 사원들의 사번, 이름, 직종, 상사번호 출력
select employee_id, first_name, job_id, manager_id
from employees
where job_id = 'ST_CLERK' and manager_id = (select employee_id from employees where first_name = 'Matthew');

--문)160번 사원과 같은 부서에서 근무하는 사람들의
부서번호, 이름, 부서명(department_name)을 가져오기
select e.department_id, first_name, department_name
from employees e join departments dep on e.department_id = dep.department_id
where e.department_id = (select department_id from employees where employee_id = 160); 

--문)경력이 가장 오래된 사원의 사번, 이름, 급여, 입사일, 부서명을 출력
select employee_id, first_name, salary, hire_date, department_name
from employees e join departments dep on e.department_id = dep.department_id
where hire_date = (select min(hire_date) from employees);

























