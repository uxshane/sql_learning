-- DB(DataBase) : 대량의 데이터를 빠르게 조회, 수정, 삭제할 수 있도록 만들어진 관계형 모델

-- SQL(Query)문 : 정보의 생성, 검색, 수정, 삭제 등을 위해 DB에게 전달하는 문장
	-> SQL문장의 종류
	1. DML(Data Manipulation Language) : 데이터 조작어
		- SELECT, INSERT, UPDATE, DELETE 등
	2. DDL(Data Definition Language) : 데이터 정의어
		- CREATE, ALTER, DROP, RENAME 등
	3. DCL(Data Control Language) : 데이터 제어어
		- GRANT, REVOKE등

--  SQL자료형
	1. NUMBER
		- 숫자 데이터를 저장하기 위해 제공되는 자료형
	2. DATE
		- 날짜와 시간 데이터를 저장하기 위한 자료형
	3. CHAR
		- 문장 데이터를 저장하는 자료형
	4. VARCHAR2
		- 문장 데이터를 저장하는 자료형(메모리를 효율적으로 써줌)

----------------- SELECT -------------------------
-- SELECT문 : DB에 저장되어 있는 자원들을 검색할 때 사용하는 문장

-- 현재 계정이 소유하고 있는 테이블의 목록 출력
SELECT * FROM tabs;

-- 사원테이블의 모든 컬럼을 조회
SELECT * FROM employees;

--부서테이블의 모든 컬럼을 조회
SELECT * FROM departments;

-- 테이블의 일부 컬럼 조회
SELECT (컬럼명1, 컬럼명2...) FROM 테이블명

-- 부서테이블에서 부서번호(department_id), 부서명(department_name)을 조회
SELECT department_id, department_name FROM departments;

--문) 사원테이블에서 사번, 이름, 입사일, 급여순으로 검색

--*** 테이블 안에 테이블은 존재할 수 없다 ***--

--여러개의 테이블에서 칼럼조회
SELECT employee_id, first_name, department_name
FROM employees, departments;

-- 별칭 : 특정 컬럼명을 다른이름으로 조회되도록 설정하는 것
SELECT employe_id, first_name
FROM employees;

--사원테이블에서 사번, 이름, 직종, 급여, 보너스, 보너스의 실금액을 출력
SELECT employee_id, first_name, job_id, salary, commission_pct, salary*commission_pct FROM employees;

-- distinct : 중복을 제거하는 명령어
SELECT  job_id,
FROM employees;

--사원테이블에서 부서번호가 중복되지 않도록 조회
SELECT distinct hire_date
FROM employees;







